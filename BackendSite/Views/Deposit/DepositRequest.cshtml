@using Microsoft.AspNetCore.Hosting
@using BackendSite.Service.BLL
@using BackendSite.Service.Model
@inject IWebHostEnvironment environment
@inject SelLangBLL selLangBLL
@inject ServerInfoBLL serverInfoBLL
@inject AuthorizeBLL authorizeBLL
@{
    Layout = "~/Views/Shared/_LayoutReactJs.cshtml";
    ViewData["Title"] = @selLangBLL.GetResourceValue("lbl_DepositApproval");
}
<h4>@selLangBLL.GetResourceValue("lbl_DepositApproval")</h4>
<hr />
<table class="table table-striped">
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_TransId")</th>
        <td>@Model.TransId</td>
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_UserName")</th>
        <td>@Model.UserName</td>
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_DepositType")</th>
        <td>@Model.DepositTypeString</td>
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_Amount")</th>
        <td>@Model.Amount</td>
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_ActualDeposit")</th>
        @{ if (@Model.Status == 0 || @Model.Status == 1)
            {
                <td><input type="number" id="actualdeposit" value="@Model.ActualDeposit" /></td>

            }
            else
            {
                <td>@Model.ActualDeposit</td>
                <input type="hidden" id="actualdeposit" value="@Model.ActualDeposit" />
            }
        }
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_Postscript")</th>
        <td>@Model.PostScript</td>
    </tr>
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_CreateTime")</th>
        <td>@Model.CreateTime</td>
    </tr>
    @{ if (@Model.Receipt == 1)
        {
            <tr>
                <th scope="row">@selLangBLL.GetResourceValue("lbl_BankSlip")</th>
                <td><img src="/Deposit/GetDepositReceiptPic?transId=@Model.TransId" /></td>
            </tr>
            <tr>
                <th scope="row">@selLangBLL.GetResourceValue("lbl_RefNo")</th>
                <td>@Model.RefNo</td>
            </tr>
            <tr>
                <th scope="row">@selLangBLL.GetResourceValue("lbl_DepositTime")</th>
                <td>@Model.DepositTime</td>
            </tr>
        }
    }
    <tr>
        <th scope="row">@selLangBLL.GetResourceValue("lbl_Status")</th>
        <td>@Model.StatusString</td>
    </tr>
 </table>

<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Create Time</th>
            <th scope="col">Actual Deposit</th>
            <th scope="col">Comment</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    @{
        var i = 1;
    }
    <tbody>
        @foreach (var item in @Model.Comments)
        {
            <tr>
                <td scope="row">@(i++)</td>
                <td>@item.CreateTime</td>
                <td>@item.ActualDeposit</td>
                <td>@item.Comment</td>
                <td>@item.ActionString</td>
            </tr>
        }
    </tbody>
</table>
<div class="container form-group">
    <label for="Command">@selLangBLL.GetResourceValue("lbl_Comment")</label>
    <textarea class="form-control" id="comment" rows="3"></textarea>
</div>
@{ if (@Model.Status == 0 || @Model.Status == 1)
    {
        <input type='button' class="btn btn-primary" onclick='UpdateStatus(1)' value='@selLangBLL.GetResourceValue("lbl_Approve")'>
        <input type='button' class="btn btn-primary" onclick='UpdateStatus(2)' value='@selLangBLL.GetResourceValue("lbl_Reject")'>
    }
    <input type='button' class="btn btn-primary" onclick='UpdateStatus(3)' value='@selLangBLL.GetResourceValue("lbl_Comment")'>
}
@section Scripts {
    <script type="text/javascript">

function UpdateStatus(Status) {
    let data = { "TransId": "@Model.TransId", "Action": Status, "ActualDeposit": parseFloat($("#actualdeposit").val()), "Comment": $("#comment").val() };
    axios.post('/Deposit/DepositConfirm', data)
        .then(function (response) {
            let result = response.data;
            if (result.errorCode == 0) {
                alert(result.message);
                location.reload();
            } else {
                alert(result.message);
            }
        }).catch(function (error) {
            alert(error);
        });
    }
    </script>
}